{% extends 'OroUIBundle:actions:view.html.twig' %}
{% import 'OroUIBundle::macros.html.twig' as macros %}
{% import 'OroTagBundle::macros.html.twig' as _tag %}
{% import 'OroDataGridBundle::macros.html.twig' as dataGrid %}
{% oro_title_set({params : {"%ticket.subject%": entity.subject }}) %}
{% macro renderComments(entity) %}
    {% set comments = entity.comments %}
    {% import 'OroUIBundle::macros.html.twig' as UI %}

    <ol class="diam-comments unstyled">
        {% for comment in comments %}
            {% set imagePath = comment.author.imagePath %}
            <li class="diam-comment">
                <div class="pull-right">
                    <a href="{{ path('diamante_comment_update', {'id': comment.id}) }}" class="action"><i class="icon-edit hide-text">Edit</i></a>
                    <a href="{{ path('diamante_comment_delete', {'id': comment.id}) }}" class="action"><i class="icon-trash hide-text">Delete</i></a>
                </div>
                <div class="diam-comment-user-image">
                    <img src="{{ imagePath ? imagePath|imagine_filter('avatar_med') : asset('bundles/oroui/img/info-' ~ iconType|default('user') ~ '.png') }}" alt="test">
                </div>
                <div class="diam-comment-meta">{{ comment.author.firstname }} {{ comment.author.lastname }} added a comment - {{ comment.createdAt|oro_format_datetime }}</div>
                <div class="diam-comment-content">{{ comment.content|escape('html')|nl2br }}</div>
                {% if comment.attachments is not empty %}
                    <div class="diam-comment-attachments-box">
                        <strong class="diam-comment-attachments-title">Attachments:</strong>
                        <ul class="diam-comment-attachments unstyled">
                            {% for attachment in comment.attachments %}
                                <li><i class="icon-paper-clip"></i> <a class="no-hash" href="{{ path('diamante_ticket_comment_attachment_download', {'commentId': comment.id, 'attachId': attachment.id}) }}">{{ attachment.filename }}</a></li>
                            {% endfor %}
                        </ul>
                    </div>
                {% endif %}
            </li>
        {% endfor %}
    </ol>

    <p style="text-align: right;">{{ UI.button({
        'path': path('diamante_comment_create', {'id': entity.id}),
        'iClass': 'icon-edit',
        'title': 'Comment'|trans,
        'label': 'Comment'|trans
        })
        }}</p>
{% endmacro %}

{% block navButtons %}
    {% set changeStatusTitle = 'Change Status' %}
    {{ UI.clientButton({
    'dataUrl': path('diamante_ticket_status_change', { 'id': entity.id }),
    'aCss': 'no-hash',
    'iCss': 'icon-edit',
    'dataId': entity.id,
    'title' : changeStatusTitle,
    'label' : changeStatusTitle,
    'widget' : {
    'type' : 'dialog',
    'multiple' : true,
    'reload-grid-name' : '',
    'options' : {
    'alias': 'status-dialog',
    'dialogOptions' : {
    'title' : changeStatusTitle,
    'allowMaximize': true,
    'allowMinimize': true,
    'dblclick': 'maximize',
    'maximizedHeightDecreaseBy': 'minimize-bar',
    'width': 500
    }
    }
    }
    }) }}
    {{ UI.button({
    'path': path('diamante_ticket_create'),
    'iClass': 'icon-user',
    'title': 'Create Ticket'|trans,
    'label': 'Create'|trans
    }) }}

    {{ UI.button({
    'path': path('diamante_ticket_update', {'id': entity.id}),
    'iClass': 'icon-edit',
    'title': 'Edit Ticket'|trans,
    'label': 'Edit'|trans
    }) }}

    {{ UI.button({
    'path': path('diamante_ticket_assign', {'id': entity.id}),
    'iClass': 'icon-edit',
    'title': 'Assign'|trans,
    'label': 'Assign'|trans
    }) }}

    {{ UI.button({
    'path': path('diamante_ticket_create_attach', {'id': entity.id}),
    'iClass': 'icon-edit',
    'title': 'Attach File'|trans,
    'label': 'Attach File'|trans
    }) }}

    {{ UI.deleteButton({
        'dataUrl': path('diamante_ticket_delete', {'id': entity.id}),
        'dataRedirect': path('diamante_ticket_list'),
        'aCss': 'no-hash remove-button',
        'dataId': entity.id,
        'id': 'btn-remove-account',
        'dataMessage': 'Are you sure you want to delete this ticket?'|trans,
        'successMessage': 'Ticket successfully deleted.'|trans,
        'title': 'Delete ticket'|trans,
        'label': 'Delete'|trans
        })
    }}
{% endblock navButtons %}

{% block pageHeader %}
    {% set breadcrumbs = {
    'entity': entity,
    'indexPath': path('diamante_branch_view', {'id': entity.branch.id}),
    'indexLabel': entity.branchName,
    'entityTitle': entity.subject|default('N/A'),
    'hasAvatar': true,
    'imagePath': entity.branch.logo ? entity.branch.logo.pathname : null
    }
    %}
    {{ parent() }}
{% endblock pageHeader %}

{% block content_data %}
    {% set id = 'navbarTicketView' %}
    {% set dataSubBlocks = [UI.attibuteRow('Subject', entity.subject)] %}
    {% set dataSubBlocks = dataSubBlocks|merge([UI.attibuteRow('Branch', entity.branchName)]) %}
    {% set dataSubBlocks = dataSubBlocks|merge([UI.attibuteRow('Status', entity.status.getLabel)]) %}
    {% set dataSubBlocks = dataSubBlocks|merge([UI.attibuteRow('Reporter', entity.reporterFullName)]) %}
    {% set dataSubBlocks = dataSubBlocks|merge([UI.attibuteRow('Assignee', entity.assigneeFullName)]) %}

    {% set attachmentListWidget %}
    {{ oro_widget_render({
    'widgetType': 'block',
    'url': path('diamant_ticket_widget_attachment_list', {id: entity.id})
    }) }}
    {% endset %}

    {% set dataBlocks =
    [
    {
    'title': 'General'|trans,
    'class': 'active',
    'subblocks': [
    {
    'title': 'Ticket Details'|trans,
    'data' : dataSubBlocks
    }
    ]
    }
    ]
    %}

    {% set dataBlocks = dataBlocks|merge([{
        'title': 'Description'|trans,
        'subblocks': [{
            'title': null,
            'data': [entity.description|escape('html')|nl2br]
        }]
    }]
    ) %}

    {% set dataBlocks = dataBlocks|merge([{
    'title' : 'Attachments'|trans,
    'subblocks': [{
    'title' : null,
    'data' : [attachmentListWidget],
    'useSpan': false
    }]
    }]
    ) %}

    {% set dataBlocks = dataBlocks|merge([{
    'title' : 'Comments'|trans,
    'subblocks': [{
    'title' : null,
    'data' : [_self.renderComments(entity)],
    'useSpan': false
    }]
    }]
    ) %}

    {% set data = {'dataBlocks': dataBlocks} %}
    {{ parent() }}
{% endblock content_data %}
