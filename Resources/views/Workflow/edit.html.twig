{% extends 'OroUIBundle:actions:update.html.twig' %}
{% import 'DiamanteAutomationBundle:Rule/macros:general.html.twig' as _general %}
{% import 'DiamanteAutomationBundle:Rule/macros:conditions.html.twig' as _conditions %}
{% import 'DiamanteAutomationBundle:Rule/macros:actions.html.twig' as _actions %}

{% set formAction = form.vars.value.id ? path('diamante_workflow_update', { 'id': form.vars.value.id }) : path('diamante_workflow_create') %}

{% block navButtons %}
    {% set cancel_url = path('diamante_workflow_list') %}
    {{ UI.button({'path' : cancel_url, 'title' : 'diamante.automation.ui.cancel'|trans, 'label' : 'diamante.automation.ui.cancel'|trans}) }}
    {% set html = UI.saveAndCloseButton() %}
    {{ UI.dropdownSaveButton({'html': html}) }}
{% endblock %}


{% block pageHeader %}
    {% if form.vars.value.id %}
        {% set breadcrumbs = {
        'entity':      form.vars.value,
        'indexPath':   path('diamante_workflow_list'),
        'indexLabel':  'diamante.automation.rule.entity_plural_label'|trans,
        'entityTitle': form.vars.value.name|default('N/A'),
        'hasAvatar':   true,
        'imagePath':   null
        } %}
        {{ parent() }}
    {% else %}
        {% set title = 'oro.ui.create_entity'|trans({'%entityName%': 'diamante.automation.rule.entity_plural_label'|trans}) %}
        {% include 'OroUIBundle::page_title_block.html.twig' with { title: title } %}
    {% endif %}
{% endblock pageHeader %}

{% block content_data %}

    <script type="text/javascript">
        require(['jquery', 'diamanteautomation/js/condition.view', 'diamanteautomation/js/action.view'],
                function ($, ConditionView, ActionView) {
                    $(function () {
                        var conditionsEl = $('#{{ form.conditions.vars.id }}');
                        new ConditionView({"conditions": conditionsEl.val(), "conditionsEl": conditionsEl});
                        new ActionView({fieldId: '#{{ form.actions.vars.id }}'});
                    });
                });
    </script>

    {% set dataBlocks = [{
    'title': 'General',
    'class': 'active',
    'subblocks': [
    {
    'title': null,
    'data': [
    _general.render(form)
    ]
    }
    ]
    }] %}

    {% set dataBlocks = dataBlocks|merge([{
    'title': 'Conditions',
    'subblocks': [
    {
    'title': null,
    'data': [_conditions.renderEdit(form), _conditions.renderTemplates('edit')]
    }]
    }]
    ) %}

    {% set dataBlocks = dataBlocks|merge([{
    'title': 'Actions'|trans,
    'subblocks': [
    {
    'title': null,
    'data': [_actions.renderEdit(form), _actions.renderTemplates('edit')]
    }]
    }]
    ) %}

    {% set data = {
    'formErrors': form_errors(form)? form_errors(form) : null,
    'dataBlocks': dataBlocks,
    } %}

    {{ parent() }}
{% endblock content_data %}